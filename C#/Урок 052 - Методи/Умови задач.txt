УВАГА: якщо якійсь методи можна зробити скороченими - робіть!

1. Перевіримо, наскільки добре ви запам'ятали матеріал уроку. Напишіть і викличте 1 раз наступні методи:
   - Метод Test, який нічого не приймає і не повертає. Він виводить на екран текст "Test".
   - Метод ShowText, який приймає 1 параметр: змінну типу string і виводить її на екран. Нічого не повертає.
   - Метод ShowDate, який нічого не повертає і приймає 3 параметри типу int: день, місяць, рік. Метод виводить
     у відформатованому вигляді дату (наприклад ось так: 12.04.2008).
   - Метод Square, який приймає число і повертає квадрат цього числа
   - Метод RectangleArea, який приймає дві сторони прямокутника і повертає їх площу

2. Напишіть декілька методів, які будуть вам в майбутньому спрощувати написання коду:
   int EnterInt()       - дає користувачу ввести число типу int і повертає його.
   double EnterDouble() - дає користувачу ввести число типу double і повертає його.
   string EnterString() - дає користувачу ввести рядок типу string і повертає його.

   Напишіть метод bool IsPalindrom(string str), який приймає текст і перевіряє, чи він паліндром. Паліндром - це
   текст, який читається з обох сторін однаково. Перевірьте метод.

3. Попрацюємо з текстом. Дайте користувачу ввести текст. Напишіть і перевірте наступні методи:
   bool Compare(string str1, string str2) - перевіряє, чи однакові два рядка. Вони однакові, якщо мають однакову
                                            довжину і їх символи збігаються (перевіряйте завдяки циклу). Повертає
                                            результат перевірки.
   int CountLetters(string text) - рахує кількість букв в тексті і повертає її.
   int CountWords(string text) - рахує кількість слів і повертає її. Словом вважається послідовність будь-яких букв.
   bool HasChar(string str, char ch) - перевіряє, чи в рядку str є символ ch. Повертає результат перевірки.
   bool HasSubstring(string str, string subStr) - перевіряє, чи в рядку str є рядок subStr. Повертає результат перевірки.

4. Попрацюємо з числовими масивами. Дайте користувачу ввести розмір одновимірного масиву, а також значення всіх елементів.
   Зробіть це завдяки наступним методам:
   - int EnterInt() - опис є в задачі 2.
   - void EnterElements(int[] arr) - дає користувачу ввести значення всіх елементів масиву.
   - void Show(int[] arr) - виводить масив на екран (як саме - вирішуйте самі).

   Після цього напишіть і перевірте наступні методи:
   int Sum(int[] arr) - рахує і повертає суму елементів масиву
   double Average(int[] arr) - рахує і повертає середнє арифметичне масиву (це сума розділена на кількість елементів).
   void Sort(int[] arr, bool isAscendingOrder = true) - сортує масив по зростанню (за замовчуванням), чи по спаданню.

5. Попрацюємо з одиночними параметрами. Дайте користувачу ввести число і напишіть та перевірте наступні методи:
   bool IsPrime(int number) - перевіряє, чи є число простим
   bool IsEven(int number) - перевіряє, чи є число парним
   int CountDigits(int number) - повертає кількість цифр, які має число
   uint Reverse(uint number) - обертає додатнє число. Наприклад якщо прийшло число 123, то повертає 321.
   int Factorial(int number) - повертає факторіал числа. Наприклад якщо число 5, то його факторіал - це 5*4*3*2*1.

6. Напишіть XML-коментарі до 5 методів, які приймають два параметри із попередніх задач. Методи вибирайте самі.

7. Напишіть перелічення Month (місяць), яке містить 12 енумераторів-місяців. Напишіть наступний метод:
   string MonthToString(Month month) - повертає назву місяця за указаним енумератором.
   ОБОВ'ЯЗКОВО використайте switch вираз в цьому методі.

8. В задачі 4 ми написали метод Show, який виводить масив типу int. Але він не працює з іншими типами. Перезавантажте
   метод наступними варіаціями і перевірте їх:
   void Show(int number) - виводить на екран звичайне число.
   void Show(string str) - виводить на екран текст.

9. В цій задачі треба написати два рекурсивних методи і перевірити їх:
    int SumOfDigits(int number) - приймає число і повертає суму його цифр
    int Fibonacci(int index) - повертає число Фібоначчі під номером index.
   
    Поясню за послідовність Фібоначі: кожне наступне число є сумою двох попередніх. Послідовність починається з числа
    0, далі 1, а далі по вище описаному правилу. Тобто перші 10 чисел Фібоначі виглядають ось так:
    0, 1, 1, 2, 3, 5, 8, 13, 21, 34 (кожне наступне число є сумою двох попередніх).

    Якщо я в метод відправлю число 5, то п'яте число із послідовності є 5 - метод має повернути це число.
    Якщо я в метод відправлю число 6, то п'яте число із послідовності є 8 - метод має повернути це число.
    Якщо я в метод відправлю число 7, то п'яте число із послідовності є 13 - метод має повернути це число.
