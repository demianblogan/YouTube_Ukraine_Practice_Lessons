1. Напишіть програму, яка буде містити список оцінок кожного студента. Спочатку
   ініціалізуйте масив із 5 елементів. Кожний елемент - це список оцінок окремого
   учня. Завдяки списку ініціалізації заповніть оцінки для кожного учня. Нехай
   кількість оцінок буде різна для кожного учня. Для цього використайте зубчастий
   масив.

   Після цього створіть одновимірний масив із 5 елементів, який містить ім'я та
   прізвище кожного учня. Завдяки списку ініціалізації заповніть його.

   Далі виведіть на екран ім'я та прізвище кожного учня, під яким виведіть список
   всіх оцінок кожного учня. Має бути щось типу такого:
   Деміен Блоган:
   8, 10, 11, 9
   Ольга Васильчук:
   12, 10
   ...
   Після цього виведіть на екран середню оцінку кожного учня та хто найкращий
   і найгірший в класі (у кого найвища середня і найнижча середня оцінки).

2. Є кінотеатр, в якому є зал з різною кількістю сидінь. За замовчуванням вони
   всі вільні. Вам треба написати програму, де у користувача постійно питатимуть,
   яке місце він хоче зайняти.

   Спочатку створіть зубчастий масив із 3 елементів. Кожний елемент - це ряд сидінь
   у залі. В кожному ряді різна кількість сидінь. Кожне сидіння - це значення типу bool,
   бо воно може бути зайнятим (true), або вільним (false).

   Після створення масиву напишіть цикл, в якому постійно показуйте користувачу,
   де находяться вільні і зайняті місця (як показувати зал - діло ваше). Після цього
   користувач має ввести номер ряду і номер сидіння місця, яке він хоче зайняти.
   Якщо місце уже зайнято - скажіть йому про це.
   Якщо місце вільне - займіть його і скажіть про це користувачу.
   Після того, як користувач вибрав любе місце і ви вивели результат його бронювання,
   запитайте, чи хоче він вибрати знову місце. Якщо скаже, що ні, значить виходьте
   з циклу.

   В кінці виведіть на екран фінальний вигляд залу.

3. Є бібліотека. В ній є шафи з полицями. На кожній полиці можуть бути книги.
   Створіть зубчастий масив із 4 елементів. Кожний елемент - це окрема полиця
   в шафі. На кожній полиці є певна кількість книжок. Завдяки списку ініціалізації
   заповніть цю кількість (кожна книжка має свою назву, тому нехай буде тип string).
   Запитайте в користувача, яку книгу він хоче найти в бібліотеці. Він вводить назву.
   Перевірте, чи є ця книга в бібліотеці і дайте відповідь.